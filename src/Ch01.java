public class Ch01 {
    // 시간 복잡도
    public static void main(String[] args) {

    }
}
/*

코딩테스트에서는 빅-오 표기법(O(n)) 사용 즉, 최대 몇번만에 성공할 수 있는가
O(1) > O(logn) // 2의 몇제곱인지로 나타내 > O(n) > O(nlogn) > O(n제곱) > O(2의 n제곱) > O(n!)

제한시간 1초 = 약 1억번이하의 연산 횟수로 문제를 해결
연산 횟수 = 알고리즘 시간복잡도 * 데이터의 크기(= n)

시간복잡도의 도출기준
1. 상수는 시간복잡도 계산에서 제외한다. ex.3n 에서 3은 무시해도 될정도의 수이다.
2. 가장 많이 중첩된 반복문의 수행횟수가 시간복잡도의 기준이 된다.

알맞은 알고리즘을 선택해라
내 로직이 효율적인지 점검해라

 */
